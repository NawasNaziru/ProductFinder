<!-- Display label recognition result  -->
<div id="label-result-div" class="menu-div padded">
  <% var displaySegmentedObjects = function(ui.data.imageBuffer, ui.data.boundingBoxes) { %>

    <% // Create a new HTML div element for each bounding box %>
    <% const divs = ui.data.boundingBoxes.map((boundingBox) => { %>
      <% const div = document.createElement('div'); %>
      <% div.style.position = 'absolute'; %>
      <% div.style.left = boundingBox.BoundingBox.Left + 'px'; %>
      <% div.style.top = boundingBox.BoundingBox.Top + 'px'; %>
      <% div.style.width = boundingBox.BoundingBox.Width + 'px'; %>
      <% div.style.height = boundingBox.BoundingBox.Height + 'px'; %>
      <% div.style.border = '1px solid black'; %>
      <% return div; %>
    <% }); %>

    <% // Create a new HTML canvas element for each bounding box %>
    <% const canvases = ui.data.boundingBoxes.map((boundingBox) => { %>
      <% const canvas = document.createElement('canvas'); %>
      <% canvas.width = boundingBox.BoundingBox.Width; %>
      <% canvas.height = boundingBox.BoundingBox.Height; %>
      <% return canvas; %>
    <% }); %>

    <% // Draw the object from the image buffer onto each canvas %>
    <% canvases.forEach((canvas, i) => { %>
      <% const context = canvas.getContext('2d'); %>
      <% context.putImageData(ui.data.imageBuffer, ui.data.boundingBoxes[i].BoundingBox.Left, ui.data.boundingBoxes[i].BoundingBox.Top); %>
    <% }); %>

    <% // Store the object images divs in a variable %>
    <% const objectImagesDivs = divs.map((div, i) => { %>
      <% div.appendChild(canvases[i]); %>
      <% return div; %>
    <% }); %>

    // Return the object images divs
    return objectImagesDivs;
  } %> 

  <!-- Call the function and display the result -->
  <%
  var result = displaySegmentedObjects(ui.data.imageBuffer, ui.data.boundingBoxes);
  result.forEach(function(div) {
    document.getElementById('label-result-div').appendChild(div);
  });
  %> 
</div>
